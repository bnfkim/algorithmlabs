# 2001. 파리 퇴치 D2

## 📍문제

[SW Expert Academy](https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5PzOCKAigDFAUq)

**※ SW Expert 아카데미의 문제를 무단 복제하는 것을 금지합니다.**

N x N 배열 안의 숫자는 해당 영역에 존재하는 파리의 개수를 의미한다.

아래는 N=5 의 예이다.

[https://swexpertacademy.com/main/common/fileDownload.do?downloadType=CKEditorImages&fileId=AV5P0m66AkIDFAUq](https://swexpertacademy.com/main/common/fileDownload.do?downloadType=CKEditorImages&fileId=AV5P0m66AkIDFAUq)

M x M 크기의 파리채를 한 번 내리쳐 최대한 많은 파리를 죽이고자 한다.

죽은 파리의 개수를 구하라!

예를 들어 M=2 일 경우 위 예제의 정답은 49마리가 된다.

[https://swexpertacademy.com/main/common/fileDownload.do?downloadType=CKEditorImages&fileId=AV5P0reqAkMDFAUq](https://swexpertacademy.com/main/common/fileDownload.do?downloadType=CKEditorImages&fileId=AV5P0reqAkMDFAUq)

**[제약 사항]**

1. N 은 5 이상 15 이하이다.

2. M은 2 이상 N 이하이다.

3. 각 영역의 파리 갯수는 30 이하 이다.

**[입력]**

가장 첫 줄에는 테스트 케이스의 개수 T가 주어지고, 그 아래로 각 테스트 케이스가 주어진다.

각 테스트 케이스의 첫 번째 줄에 N 과 M 이 주어지고,

다음 N 줄에 걸쳐 N x N 배열이 주어진다.

**[출력]**

출력의 각 줄은 '#t'로 시작하고, 공백을 한 칸 둔 다음 정답을 출력한다.

(t는 테스트 케이스의 번호를 의미하며 1부터 시작한다.)

## 📍코드

```java
import java.util.Scanner;
class Solution {
    public static void main(String[] args) throws Exception     {
        Scanner sc = new Scanner(System.in);
        int T = sc.nextInt();
        for (int tc = 1; tc <= T; tc++){
            int n = sc.nextInt();
            int m = sc.nextInt();
            int[][] arr = new int[n][n];

            for(int i=0; i<n; i++){
                for(int j=0; j<n; j++) arr[i][j] = sc.nextInt();
            }
            int max = 0;
            //필요한 조건 : 파리채가 배열 밖으로 나가지 않게
            for(int i=0; i<n-m+1; i++){ //배열 오른쪽 이동칸수
                for(int j=0; j<n-m+1; j++){ //배열 아래쪽 이동칸수
                    int sum = 0;
                    for(int y=0; y<m; y++){ //파리채 오른쪽 이동칸수
                        for(int x=0; x<m; x++){ //파리채 아래쪽 이동칸수
                            sum += arr[i+y][j+x];
                        }
                    }
                    max = Math.max(sum, max);
                }
            }
            System.out.println("#" + tc + " " + max);
        }
    }
}
```

## 📍기록
